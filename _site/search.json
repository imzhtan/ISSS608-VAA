[
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html",
    "title": "Take-home Exercise 02",
    "section": "",
    "text": "This exercise is based on a take-home exercise 1 submission prepared by a classmate. The peer submission will be critiqued in terms of clarity and aesthetics, and the original design will be remade using the data visualization principles and best practice learnt in Lesson 1 and 2.\nThe dataset used in take-home exercise 1 and 2 is a CSV file extracted from Singstat website named ‘respopagesextod2022’ and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#install-and-launching-r-packages",
    "title": "Take-home Exercise 02",
    "section": "2.1 Install and launching R packages",
    "text": "2.1 Install and launching R packages\nThe code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#importing-the-data",
    "title": "Take-home Exercise 02",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\nThe code chunk below imports respopagesextod2022.csv from the data folder into R by using read_csv() of readr and save it as an tibble data frame called data.\n\npop_data <- read_csv(\"data/respopagesextod2022.csv\")\n\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nhead(pop_data)\n\n# A tibble: 6 × 7\n  PA         SZ                     AG     Sex   TOD                   Pop  Time\n  <chr>      <chr>                  <chr>  <chr> <chr>               <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 1- and 2-Room …     0  2022\n2 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 3-Room Flats       10  2022\n3 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 4-Room Flats       10  2022\n4 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HDB 5-Room and Exe…    30  2022\n5 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males HUDC Flats (exclud…     0  2022\n6 Ang Mo Kio Ang Mo Kio Town Centre 0_to_4 Males Condominiums and O…    50  2022"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#ordering-age-group",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#ordering-age-group",
    "title": "Take-home Exercise 02",
    "section": "2.3 Ordering Age Group",
    "text": "2.3 Ordering Age Group\nThe code chunk below orders the Age groups sequentially, by planning area, age group and sex.\n\npop_data$AG <- gsub(\"_\", \n                    \" \", \n                    pop_data$AG, \n                    fixed = TRUE)\n\nag_order <- c(\"0 to 4\", \"5 to 9\", \"10 to 14\", \"15 to 19\", \"20 to 24\", \"25 to 29\", \"30 to 34\", \"35 to 39\", \"40 to 44\", \"45 to 49\", \"50 to 54\", \"55 to 59\", \"60 to 64\", \"65 to 69\", \"70 to 74\", \"75 to 79\", \"80 to 84\", \"85 to89\", \"90 and over\")\n\npop_ordered <- pop_data %>%\n  group_by(`PA`, `AG`,`Sex`) %>%\n  summarise(`Count` = sum(`Pop`)) %>%\n  mutate(AG = factor(AG, levels = ag_order)) %>%\n  arrange(AG) %>%\n  ungroup()\n\n`summarise()` has grouped output by 'PA', 'AG'. You can override using the\n`.groups` argument."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filtering-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#filtering-planning-areas",
    "title": "Take-home Exercise 02",
    "section": "2.4 Filtering Planning Areas",
    "text": "2.4 Filtering Planning Areas\nIt looks like ZeXeong selected the planning areas based on the top 9 population sizes. The code chunk below filters these 9 planning areas.\n\nt9_pa <- pop_data %>%\n  group_by(`PA`) %>%\n  summarise(`Count` = sum(`Pop`)) %>%\n  ungroup()\n\nt9 <- arrange(t9_pa, desc(t9_pa$Count)) %>%\n  slice(1:9) %>%\n  select(`PA`)\n\nt9_only1 <- pop_ordered %>% \n  filter(pop_ordered$PA %in% t9$PA)\n\nt9_only = na.omit(t9_only1)\n\nhead(t9_only)\n\n# A tibble: 6 × 4\n  PA            AG     Sex     Count\n  <chr>         <fct>  <chr>   <dbl>\n1 Bedok         0 to 4 Females  4970\n2 Bedok         0 to 4 Males    5090\n3 Choa Chu Kang 0 to 4 Females  4080\n4 Choa Chu Kang 0 to 4 Males    4260\n5 Hougang       0 to 4 Females  4430\n6 Hougang       0 to 4 Males    4520"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-grid-facet-to-display-population-pyramids-in-a-row",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-grid-facet-to-display-population-pyramids-in-a-row",
    "title": "Take-home Exercise 02",
    "section": "3.1 Critique of Grid Facet to Display Population Pyramids in a Row",
    "text": "3.1 Critique of Grid Facet to Display Population Pyramids in a Row\n\n\n\nFigure 1: Original design by classmate row Trellis\n\n\n\n3.1.1 Critique\n\n3.1.1.1 Clarity\nWhat works:\n(A) As there are only 9 planning areas, this grid facet to display the pyramids in a row works as we can clearly see the side by side comparison of each planning area.\n(B)The planning area labels are clearly stated at the top of each planning area.\nWhat doesn’t work and why:\n(A) Title\n\nThe title does not provide sufficient detail about the data being visualized. It simply states ‘Compare the Feasibility for Visual Analysis by Two Trellis Layouts of 9 Population Pyramids’. It does not say the data is for which country’s population and for which year. A more appropriate title will be ‘Age-Sex Pyramid for Selected Planning Areas in Singapore, 2022’\n(B) Axes\nThe x-axis does not have a label telling us what is the information being shown. It is also not shown even at the bottom of the dashboard. The legend at the bottom shows us which color represents which sex but it is insufficient to tell us is this a count or proportion, nor does it tell us the units. In general, if the word ‘count’ is used (e.g. Male Count), this tells us it is a number.\n(C) Grid\nWith an x-axis values, it would also be good to include vertical grid lines as the x-axis is in continuous numbers.\n\n\n3.1.1.2 Aesthetics\nWhat doesn’t work and why:\n(A) Colour\n\nThe colors used to represent Male and Female are not intuitive. By convention, Blue is used to represent Male and Red/Pink is used to represent Female. Of course, this is only based on convention and not a hard rule, but for people who are used to the conventional colors, at first glance, we may think that the right side of the pyramids are representing Males.\nThe horizontal alternating color shading (i.e. grey-white-grey-white) does not seem to be necessary as the age groups are in ‘discrete horizontal bars’ and not ‘continuous’. The alternating shading also seem to be missing for the left side of each pyramid, which may be distracting.\n(B) Data labels\nThe labels for the count being displayed overlapping the bars can make the charts very messy. It may also be hard to read the numbers for the top of the pyramid where the bars are short. Some solutions are to either display the numbers outside the bar (non-overlapping), change the numbers to thousands using ‘k’, or not display the numbers at all since there is already a tooltip displaying information as you hover over the bars.\n\n\n\n3.1.2 Remake\n\nChanged title to ‘Age-Sex Pyramid in Singapore, 2022’.\nAdded a x-axis label ‘Population Count’ as well as the x-axis values of up to 15k on each side in steps of 5k as well as grid lines for more clarity.\nChanged the colors of the bars to Blue for ‘Males’ and Pink for ‘Females’. Removed alternating shading.\nRemoved count value display for each bar.\nIn the tooltip, unnecessary information is removed. When hovering over ‘Females’, only the AG, sex and female count is shown and similarly for ‘Males’.\n\n\nAgSxPyr_t9 <- ggplot(t9_only, aes(x = AG, y = Count, fill = Sex)) +\n  geom_bar(data = subset(t9_only, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -Count, \n               fill = Sex), \n           stat = \"identity\" \n          ) +\n  geom_bar(data = subset(t9_only, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = Count, \n               fill = Sex), \n           stat = \"identity\" \n           ) +\n  scale_y_continuous(breaks = seq(-15000, 15000, 5000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(15, 0, -5), \n                           seq(5, 15, 5))),\n                       \"k\")) +\n  coord_flip() +\n  facet_grid(~ PA) +\n  labs (y = \"Population Count\", \n        x = \"Age Group\", \n        title = 'Age-Sex Pyramid in Singapore, 2022') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"lightblue\", \n                               \"Females\" = \"lightpink\")) \n\nggplotly(AgSxPyr_t9, \n         session = \"knitr\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-wrap-facet-to-display-population-pyramids-3-by-3-matrix",
    "href": "Take-home_Ex/Take-home_Ex02/Take-home_Ex02.html#critique-of-wrap-facet-to-display-population-pyramids-3-by-3-matrix",
    "title": "Take-home Exercise 02",
    "section": "3.2 Critique of Wrap Facet to Display Population Pyramids 3 by 3 Matrix",
    "text": "3.2 Critique of Wrap Facet to Display Population Pyramids 3 by 3 Matrix\n\n\n\nFigure 2: Original design by classmate 3x3 Trellis\n\n\n\n3.2.1 Critique\n\n3.2.1.1 Clarity\nWhat doesn’t work and why:\n(A) Title\n\nSame as point 3.1.1.1\n(B) Axes\nSame as point 3.1.1.1\n(B) Grid\nSame as point 3.1.1.1\n\n\n3.2.1.2 Aesthetics\nWhat doesn’t work and why:\n(A) Colour\n\nSame as point 3.1.1.2\n(B) Data labels\nSame as point 3.1.1.1\n(C) Tooltip\nIt would be good to remove unnecessary information to avoid confusion in the tooltip such as the ‘Column along PA’ and ‘Row along PA’. We can also remove ‘Male Population’ when hovering over Female and remove ‘Female Population’ when hovering over ‘Male’\n\n\n\n3.2.2 Remake\n\nAgSxPyr_t9 <- ggplot(t9_only, aes(x = AG, y = Count, fill = Sex)) +\n  geom_bar(data = subset(t9_only, \n                         Sex == \"Males\"), \n           aes(x = AG, \n               y = -Count, \n               fill = Sex), \n           stat = \"identity\" \n           ) +\n  geom_bar(data = subset(t9_only, \n                         Sex == \"Females\"), \n           aes(x = AG, \n               y = Count, \n               fill = Sex), \n           stat = \"identity\" \n          ) +\n  scale_y_continuous(breaks = seq(-15000, 15000, 5000), \n                     labels = paste0(\n                       as.character(\n                         c(seq(15, 0, -5), \n                           seq(5, 15, 5))),\n                       \"k\")) +\n  coord_flip() +\n  facet_wrap(~ PA) +\n  labs (y = \"Population Count\", \n        x = \"Age Group\", \n        title = 'Age-Sex Pyramid in Singapore, 2022') +\n  theme_bw() +\n  theme(axis.ticks.y = element_blank()) +\n  scale_fill_manual(values = c(\"Males\" = \"lightblue\", \n                               \"Females\" = \"lightpink\")) \n\nggplotly(AgSxPyr_t9, \n         session = \"knitr\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1",
    "section": "",
    "text": "1. Introduction\nIn this exercise, I created a 3x3 trellis view dashboard of the Age-Sex pyramid of Singapore’s resident population for 9 of the 55 planning areas in Singapore for 2022. The data is a CSV file extracted from Singstat website named ‘respopagesextod2022’.\n\n\n\nFigure 1: A snapshot of the dataset used\n\n\nI created a multi-select filter card for planning area so that we can choose whichever 9 planning areas we want to visualize but for the analysis I chose 9 specific planning areas as described in Section 3.\n\n\n2. Step-by-step procedure\n\n\n\n\n\n\n\n\nNo.\nStep\nScreenshot\n\n\n\n\n1\nLoad the excel file into Tableau. Drag ‘respopagesextod2022’ worksheet into the main pane under Data Source. Rename the variables accordingly (e.g. from AG to ‘Age Group’).\nNote: Not much pre-cleaning of the data is necessary for this exercise, as the aggregations (e.g. sum of population count by gender, age group, planning area) will automatically be done by Tableau when the graphs are created. The default data types will also not impact the final visualization (e.g. year is not used).\n\n\n\n2\nCreate a new sheet. We start by creating just 1 Age-Sex pyramid for the whole resident population first.\nClick on the down arrow as shown in red circle in the the screenshot and create calculated fields ‘CountFemales’ and ‘CountMales’ using the formula in the screenshot.\n\n\n\n\n3\nDrag ‘Age Group’ into the Rows field and ‘CountMales’ and ‘CountFemales’ into the Columns field.\n\n\n\n4\nRight click on ‘CountMales’ on the horizontal axis and click ‘Edit Axis’. Select ‘Reversed’ under Scale.\n\n\n\n5\nTo filter only 9 planning areas, drag ‘Planning Areas’ to the Filters box. Randomly select 9 planning areas first.\n\n\n\n6\nClick on the arrow in the ‘Planning areas’ pill and select ‘Show Filter’ to display the filter card so that you can select any planning areas you wish to visualize later on.\n\n\n\n7\nUnder Marks box -> ‘Sum(CountFemales)’, click on ‘Color’ and select the desired color to differentiate the sexes by color.\n\n\n\n8\nNext, we create the Trellis View. Create a new calculated field, ‘Index’ using the formula shown in the screenshot.\n\n\n\n9\nCreate a new parameter called ‘# of Columns’, choose Data Type ‘Integer and input ’3’ under Current Value. This is because we want to have a 3 x 3 Trellis View.\n\n\n\n10\nCreate 2 new calculated fields, ‘Rows’ and ‘Columns’ using the formulas shown in the screenshot.\nAfter creating these new variables, click on the down arrow when hovering over them on the left panel and convert to ‘discrete’.\n\n\n\n11\nDrag ‘Rows’ into the Rows field and ‘Columns’ into the Columns field. Drag ‘Planning Area’ into the Label box under Marks -> All.\n\n\n\n12\nClick on the down arrow in the ‘Columns’ pill in the Columns field and select Compute Using -> Planning Area.\nDo the same for the ‘Rows’ pill in the Rows field.\n\n\n\n13\nNext, we move on to labeling the planning areas.\nFirst, un-check ‘Show mark labels’ by clicking on Label under Marks -> All.\nNote: I’m doing it in a slightly different way, so that the Planning Area can be in a column on its own. However, I’ve also prepared the standard version where the label appears on the top right (simply allow label overlap, always show label for one of the bars and click and move it around). The instructions below are for the non-standard way.\n\n\n\n14\nCreate a new variable directly within the Columns field by double-clicking on an empty space within it. Type in ‘AVG(0)’. Drag the newly created pill to the left of the SUM(CountMales) pill.\n\n\n\n15\nUnder Marks -> AGG(AVG(0)), change the type to ‘Line’ and the Opacity to 0%.\n\n\n\n16\nDrag ‘Planning Area’ to Label under Marks -> AGG(AVG(0)). Select ‘Line Ends’ under ‘Marks to label’ and un-check ‘Label end of line’.\n\n\n\n17\nLastly, improve the aesthetics.\nHide the headers on the top and left by right-clicking and de-selecting ‘Show Header’.\n\n\n\n18\nChange the order of Age Group by Data source order so that youngest Age Group is at the bottom and oldest at the top.\n\n\n\n19\nChange the title of the sheet by clicking on the title field or changing it dynamically in the sheet name.\nChange the labels on the horizontal axis by right-clicking on them.\n\n\n\n20\nAdd or delete information in the tooltip under Marks -> All -> Tooltip.\n\n\n\n21\nCreate a new dashboard ‘Dashboard 1’, drag ‘Age-Sex Pyramid for Selected Planning Areas in Singapore, 2022’ into the pane.\nIn this case, as we only have one visualization in the dashboard, there is no need to add title text or make other changes.\n\n\n\n22\nAdjust the size of charts, dashboard, etc. for better presentation. Extract data if necessary. Click Server -> Tableau Public -> Save to Tableau Public’ for publishing.\nLinks to my Tableau Public visualizations:\n\nPlanning area in a column on its own: Link\nStandard version where planning area is on the top right of each pyramid: Link\n\n\n\n\n\n\n\n3. Write-up on Patterns observed from visualization\nFor the pattern analysis, I selected 9 planning areas (PA) split equally by 3 market segments as defined by the Urban Redevelopment Authority (URA):\n\nCore Central Region (CCR): Bukit Timah, Newton, Novena\nRest of Central Region (RCR): Bishan, Toa Payoh, Queenstown\nOutside Central Region (OCR): Jurong East, Tampines, Yishun\n\n\n\n\nFigure 2: Trellis view of the Age-Sex pyramids for 9 selected planning areas\n\n\n(1) For almost all the PA, there seems to be several horizontal peak and troughs. The age groups between 55 to 69, as well as age groups between 25 to 39 are the peaks while the other age groups are the troughs. This is reflective of the Baby Boomers (around age 59-77) and their children (Millennials around age 27-42), which have relatively more births compared to the other generations.\n(2) In general, more people live in the OCR compared to the RCR which in turn has more people compared to the CCR. This could be reflective of the ratio of residences compared to other infrastructure in the different regions, as well as affordability. We can see that the age-sex pyramids are widest for Tampines and Yishun, and narrowest for Newtown and Novena, while the rest are in between. We note that there are some minor exceptions such as Bishan (RCR), Bukit Timah (CCR) and Jurong East (OCR) being quite similar to each other due to proportion of residences, but this does not cause the overall trend to deviate greatly.\n(3) The Sex distribution seems to be relatively evenly distributed for most age groups (with slightly more females than males) except for those aged 75 and above where the difference is more pronounced. This could be due to higher life expectancy for females compared to males, which are 85.9 and 81.1 respectively for Singapore residents in 2021.\n(4) For PAs in the RCR and OCR, the largest or second largest age group is 30-34. However, the largest age group for PAs in the CCR is 45-49. This could be because residences for PAs in CCR are more expensive compared to other market segments and, generally, those aged 45-49 would have higher income and spending power compared to the younger age groups and be able to afford living in the CCR.\n(5) There are signs of a shrinking population, with the age groups within 0 to 19 smaller than the earlier generations, with the exception of those above 70. The top and bottom ends of the pyramid are the narrowest. It is understandable that there would be fewer people in the older age groups as they pass on. However, the pattern also shows that there are fewer young people and we could gradually see an aging population as the baby boomers move into their senior years. Unless the trends are reversed, the Millennials (children of the Baby Boomers) could be the last sizeable age group."
  }
]