[
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html",
    "title": "Take-home Exercise 03",
    "section": "",
    "text": "In this take-home exercise, I will uncover the salient patterns of the resale prices of public housing property by residential towns in Singapore by using appropriate analytical visualisation techniques learned in Lesson 4: Fundamentals of Visual Analytics.\nFor the purpose of this study, the focus will be on 3-ROOM, 4-ROOM and 5-ROOM types. The study period will be on 2022.\nResale flat princes based on registration date from Jan-2017 onwards from Data.gov.sg will be used to prepare the analytical visualisation and processed by RStudio tidyverse family of packages and visualized by ggplot2 and its extensions as well as other R packages."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#installing-and-launching-r-packages",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#installing-and-launching-r-packages",
    "title": "Take-home Exercise 03",
    "section": "2.1 Installing and launching R packages",
    "text": "2.1 Installing and launching R packages\nThe code chunk below uses p_load() of pacman package to check if the various packages used for the visual analysis are installed in the computer. If they are, then they will be launched into R.\n\n\nCode\npacman::p_load(ggstatsplot, tidyverse, readxl, performance, parameters, see, plotly, crosstalk, DT, ggdist, gganimate, gifski, gapminder)\n\nlibrary(plotly)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-the-data",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#importing-the-data",
    "title": "Take-home Exercise 03",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\nThe code chunk below imports resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv from the data folder into R by using read_csv() of readr and save it as an tibble data frame called resale_data.\n\n\nCode\nresale_data <- read_csv(\"data/resale-flat-prices-based-on-registration-date-from-jan-2017-onwards.csv\")\n\nhead(resale_data)\n\n\n# A tibble: 6 × 11\n  month   town     flat_…¹ block stree…² store…³ floor…⁴ flat_…⁵ lease…⁶ remai…⁷\n  <chr>   <chr>    <chr>   <chr> <chr>   <chr>     <dbl> <chr>     <dbl> <chr>  \n1 2017-01 ANG MO … 2 ROOM  406   ANG MO… 10 TO …      44 Improv…    1979 61 yea…\n2 2017-01 ANG MO … 3 ROOM  108   ANG MO… 01 TO …      67 New Ge…    1978 60 yea…\n3 2017-01 ANG MO … 3 ROOM  602   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n4 2017-01 ANG MO … 3 ROOM  465   ANG MO… 04 TO …      68 New Ge…    1980 62 yea…\n5 2017-01 ANG MO … 3 ROOM  601   ANG MO… 01 TO …      67 New Ge…    1980 62 yea…\n6 2017-01 ANG MO … 3 ROOM  150   ANG MO… 01 TO …      68 New Ge…    1981 63 yea…\n# … with 1 more variable: resale_price <dbl>, and abbreviated variable names\n#   ¹​flat_type, ²​street_name, ³​storey_range, ⁴​floor_area_sqm, ⁵​flat_model,\n#   ⁶​lease_commence_date, ⁷​remaining_lease"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-wrangling",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#data-wrangling",
    "title": "Take-home Exercise 03",
    "section": "2.3 Data wrangling",
    "text": "2.3 Data wrangling\n\na) Filtering\nThe code chunk below filters for 3, 4 and 5 room flat types and for year 2022.\n\n\n\nCode\nresale_data_filter <- resale_data %>%\n  separate(month, into = c(\"year\", \"month\"), sep = \"-\") %>%\n  filter(year == \"2022\") %>%\n  filter(flat_type %in% c(\"3 ROOM\", \"4 ROOM\", \"5 ROOM\"))\n\nhead(resale_data_filter)\n\n\n# A tibble: 6 × 12\n  year  month town       flat_type block stree…¹ store…² floor…³ flat_…⁴ lease…⁵\n  <chr> <chr> <chr>      <chr>     <chr> <chr>   <chr>     <dbl> <chr>     <dbl>\n1 2022  01    ANG MO KIO 3 ROOM    320   ANG MO… 07 TO …      73 New Ge…    1977\n2 2022  01    ANG MO KIO 3 ROOM    225   ANG MO… 07 TO …      67 New Ge…    1978\n3 2022  01    ANG MO KIO 3 ROOM    331   ANG MO… 07 TO …      68 New Ge…    1981\n4 2022  01    ANG MO KIO 3 ROOM    534   ANG MO… 07 TO …      82 New Ge…    1980\n5 2022  01    ANG MO KIO 3 ROOM    578   ANG MO… 04 TO …      67 New Ge…    1980\n6 2022  01    ANG MO KIO 3 ROOM    452   ANG MO… 01 TO …      83 New Ge…    1979\n# … with 2 more variables: remaining_lease <chr>, resale_price <dbl>, and\n#   abbreviated variable names ¹​street_name, ²​storey_range, ³​floor_area_sqm,\n#   ⁴​flat_model, ⁵​lease_commence_date\n\n\n\n\nb) Converting variable and datatype\nThe code chunk below converts the remaining lease from months and years (in the character datatype) to months (in the numeric datatype).\n\n\nCode\nresale_data_lease1 <- resale_data_filter %>%\nseparate(remaining_lease, into = c(\"years\", \"months\"), sep = \" years \") %>%\n separate(years, into = c(\"years\", \"test1\"), sep = \" \") %>%\n  separate(months, into = c(\"months\", \"test2\"), sep = \" \") %>%\n  transform(years = as.numeric(years)) %>%\n  transform(months = as.numeric(months)) %>%\n  replace(is.na(.), 0) %>%\n  transform(rem_lease_inmonths = months + (years * 12))\n  \nresale_data_lease <- subset(resale_data_lease1, select = -c(test1, test2))\n\nhead(resale_data_lease)\n\n\n  year month       town flat_type block       street_name storey_range\n1 2022    01 ANG MO KIO    3 ROOM   320  ANG MO KIO AVE 1     07 TO 09\n2 2022    01 ANG MO KIO    3 ROOM   225  ANG MO KIO AVE 1     07 TO 09\n3 2022    01 ANG MO KIO    3 ROOM   331  ANG MO KIO AVE 1     07 TO 09\n4 2022    01 ANG MO KIO    3 ROOM   534 ANG MO KIO AVE 10     07 TO 09\n5 2022    01 ANG MO KIO    3 ROOM   578 ANG MO KIO AVE 10     04 TO 06\n6 2022    01 ANG MO KIO    3 ROOM   452 ANG MO KIO AVE 10     01 TO 03\n  floor_area_sqm     flat_model lease_commence_date years months resale_price\n1             73 New Generation                1977    54      5       358000\n2             67 New Generation                1978    55      1       355000\n3             68 New Generation                1981    58      0       338000\n4             82 New Generation                1980    57      2       420000\n5             67 New Generation                1980    57      1       328000\n6             83 New Generation                1979    56      7       360000\n  rem_lease_inmonths\n1                653\n2                661\n3                696\n4                686\n5                685\n6                679\n\n\n\n\nc) Ordering\n\nThe code chunk below changes the storey range into a factor variable such that it’s ordered.\n\n\nCode\nstorey_order <- c(\"01 TO 03\", \"04 TO 06\", \"07 TO 09\", \"10 TO 12\", \"13 TO 15\", \"16 TO 18\", \"19 TO 21\", \"22 TO 24\", \"25 TO 27\", \"28 TO 30\", \"31 TO 33\", \"34 TO 36\", \"37 TO 39\", \"40 TO 42\", \"43 TO 45\", \"46 TO 48\", \"49 TO 51\")\n\nresale_data_order <- resale_data_lease %>% \n  mutate(`storey_range` = factor(storey_range, levels = storey_order))\n\nhead(resale_data_order)\n\n\n  year month       town flat_type block       street_name storey_range\n1 2022    01 ANG MO KIO    3 ROOM   320  ANG MO KIO AVE 1     07 TO 09\n2 2022    01 ANG MO KIO    3 ROOM   225  ANG MO KIO AVE 1     07 TO 09\n3 2022    01 ANG MO KIO    3 ROOM   331  ANG MO KIO AVE 1     07 TO 09\n4 2022    01 ANG MO KIO    3 ROOM   534 ANG MO KIO AVE 10     07 TO 09\n5 2022    01 ANG MO KIO    3 ROOM   578 ANG MO KIO AVE 10     04 TO 06\n6 2022    01 ANG MO KIO    3 ROOM   452 ANG MO KIO AVE 10     01 TO 03\n  floor_area_sqm     flat_model lease_commence_date years months resale_price\n1             73 New Generation                1977    54      5       358000\n2             67 New Generation                1978    55      1       355000\n3             68 New Generation                1981    58      0       338000\n4             82 New Generation                1980    57      2       420000\n5             67 New Generation                1980    57      1       328000\n6             83 New Generation                1979    56      7       360000\n  rem_lease_inmonths\n1                653\n2                661\n3                696\n4                686\n5                685\n6                679\n\n\n\n\nd) Deriving new variables\nThe code chunk below creates a new variable price per square feet (psf), which is commonly used to compare the price of houses of different sizes. I did this by dividing total resale price by floor area (converted from meters to feet by multiplying by 10.7639).\n\n\nCode\nresale_data_psf <- resale_data_order %>%\n  mutate(`psf` = as.integer(round(resale_price/(floor_area_sqm * 10.7639), 2)))\n\nhead(resale_data_psf)\n\n\n  year month       town flat_type block       street_name storey_range\n1 2022    01 ANG MO KIO    3 ROOM   320  ANG MO KIO AVE 1     07 TO 09\n2 2022    01 ANG MO KIO    3 ROOM   225  ANG MO KIO AVE 1     07 TO 09\n3 2022    01 ANG MO KIO    3 ROOM   331  ANG MO KIO AVE 1     07 TO 09\n4 2022    01 ANG MO KIO    3 ROOM   534 ANG MO KIO AVE 10     07 TO 09\n5 2022    01 ANG MO KIO    3 ROOM   578 ANG MO KIO AVE 10     04 TO 06\n6 2022    01 ANG MO KIO    3 ROOM   452 ANG MO KIO AVE 10     01 TO 03\n  floor_area_sqm     flat_model lease_commence_date years months resale_price\n1             73 New Generation                1977    54      5       358000\n2             67 New Generation                1978    55      1       355000\n3             68 New Generation                1981    58      0       338000\n4             82 New Generation                1980    57      2       420000\n5             67 New Generation                1980    57      1       328000\n6             83 New Generation                1979    56      7       360000\n  rem_lease_inmonths psf\n1                653 455\n2                661 492\n3                696 461\n4                686 475\n5                685 454\n6                679 402\n\n\n\n\ne) Re-coding variables\nThe code chunks below visualizes the town distribution.\n\n\nCode\nggplot(data = resale_data_psf,\n       aes(y = town)) +\n  geom_bar() +\n  theme_bw() +  \n  ggtitle(\"Town distribution\")\n\n\n\n\n\nThe code chunk below recodes the town variable into 3 market segments as defined by the Urban Redevelopment Authority (URA); Core Central Region (CCR), Rest of Central Region (RCR) and Outside Central Region (OCR).\n\n\nCode\nCCR <- c(\"CENTRAL AREA\", \"BUKIT TIMAH\")\nRCR <- c(\"TOA PAYOH\", \"QUEENSTOWN\", \"MARINE PARADE\", \"KALLANG/WHAMPOA\", \"GEYLANG\",\"BISHAN\")\nOCR <- c(\"YISHUN\", \"WOODLANDS\", \"TAMPINES\", \"SERANGOON\", \"SENGKANG\", \"SEMBAWANG\", \"PUNGGOL\", \"PASIR RIS\", \"JURONG WEST\", \"JURONG EAST\", \"HOUGANG\", \"CLEMENTI\", \"CHOA CHU KANG\", \"BUKIT PANJANG\", \"BUKIT MERAH\", \"BUKIT BATOK\", \"BEDOK\", \"ANG MO KIO\")\n\nresale_data_final <- resale_data_psf %>%\n  mutate(market_segment = recode(town, \n  \"CENTRAL AREA\" = \"Core Central Region\",\n  \"BUKIT TIMAH\" = \"Core Central Region\",\n  \"TOA PAYOH\" = \"Rest of Central Region\",\n  \"QUEENSTOWN\" = \"Rest of Central Region\",\n  \"MARINE PARADE\" = \"Rest of Central Region\",\n  \"KALLANG/WHAMPOA\" = \"Rest of Central Region\",\n  \"GEYLANG\" = \"Rest of Central Region\",\n  \"BISHAN\" = \"Rest of Central Region\",\n  \"YISHUN\" = \"Outside Central Region\",\n  \"WOODLANDS\" = \"Outside Central Region\",\n  \"TAMPINES\" = \"Outside Central Region\",\n  \"SERANGOON\" = \"Outside Central Region\",\n  \"SENGKANG\" = \"Outside Central Region\",\n  \"SEMBAWANG\" = \"Outside Central Region\",\n  \"PUNGGOL\" = \"Outside Central Region\",\n  \"PASIR RIS\" = \"Outside Central Region\",\n  \"JURONG WEST\" = \"Outside Central Region\",\n  \"JURONG EAST\" = \"Outside Central Region\",\n  \"HOUGANG\" = \"Outside Central Region\",\n  \"CLEMENTI\" = \"Outside Central Region\",\n  \"CHOA CHU KANG\" = \"Outside Central Region\",\n  \"BUKIT PANJANG\" = \"Outside Central Region\",\n  \"BUKIT MERAH\" = \"Outside Central Region\",\n  \"BUKIT BATOK\" = \"Outside Central Region\",\n  \"BEDOK\" = \"Outside Central Region\",\n  \"ANG MO KIO\" = \"Outside Central Region\"))\n  \nhead(resale_data_final)\n\n\n  year month       town flat_type block       street_name storey_range\n1 2022    01 ANG MO KIO    3 ROOM   320  ANG MO KIO AVE 1     07 TO 09\n2 2022    01 ANG MO KIO    3 ROOM   225  ANG MO KIO AVE 1     07 TO 09\n3 2022    01 ANG MO KIO    3 ROOM   331  ANG MO KIO AVE 1     07 TO 09\n4 2022    01 ANG MO KIO    3 ROOM   534 ANG MO KIO AVE 10     07 TO 09\n5 2022    01 ANG MO KIO    3 ROOM   578 ANG MO KIO AVE 10     04 TO 06\n6 2022    01 ANG MO KIO    3 ROOM   452 ANG MO KIO AVE 10     01 TO 03\n  floor_area_sqm     flat_model lease_commence_date years months resale_price\n1             73 New Generation                1977    54      5       358000\n2             67 New Generation                1978    55      1       355000\n3             68 New Generation                1981    58      0       338000\n4             82 New Generation                1980    57      2       420000\n5             67 New Generation                1980    57      1       328000\n6             83 New Generation                1979    56      7       360000\n  rem_lease_inmonths psf         market_segment\n1                653 455 Outside Central Region\n2                661 492 Outside Central Region\n3                696 461 Outside Central Region\n4                686 475 Outside Central Region\n5                685 454 Outside Central Region\n6                679 402 Outside Central Region\n\n\nThe code chunks below visualizes the storey range distribution.\n\n\nCode\nggplot(data = resale_data_psf,\n       aes(y = storey_range)) +\n  geom_bar() +\n  theme_bw() +  \n  ggtitle(\"Storey range distribution\")\n\n\n\n\n\nI initially thought of re-coding storey range into ‘low’, ‘middle’ and ‘high’ floor but found that this may not allow a fair comparison as different buildings have different number of storeys. It is difficult to have a standardized definition of ‘low’, ‘middle’ and ‘high’ floor. For some buildings, 10th storey may be considered a high floor, but for other buildings, 10th storey may be the middle floor.\n\n\nCode\nskimr::skim(resale_data_final)\n\n\n\nData summary\n\n\nName\nresale_data_final\n\n\nNumber of rows\n24374\n\n\nNumber of columns\n16\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n8\n\n\nfactor\n1\n\n\nnumeric\n7\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nyear\n0\n1\n4\n4\n0\n1\n0\n\n\nmonth\n0\n1\n2\n2\n0\n12\n0\n\n\ntown\n0\n1\n5\n15\n0\n26\n0\n\n\nflat_type\n0\n1\n6\n6\n0\n3\n0\n\n\nblock\n0\n1\n1\n4\n0\n2457\n0\n\n\nstreet_name\n0\n1\n7\n20\n0\n552\n0\n\n\nflat_model\n0\n1\n4\n22\n0\n16\n0\n\n\nmarket_segment\n0\n1\n19\n22\n0\n3\n0\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nstorey_range\n0\n1\nFALSE\n17\n04 : 5453, 07 : 5110, 10 : 4499, 01 : 4118\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nfloor_area_sqm\n0\n1\n94.07\n19.32\n51\n81\n93\n110\n159\n▅▇▆▃▁\n\n\nlease_commence_date\n0\n1\n1997.46\n14.98\n1967\n1985\n1998\n2014\n2019\n▂▆▅▃▇\n\n\nyears\n0\n1\n74.06\n15.02\n43\n61\n74\n91\n96\n▂▇▃▅▇\n\n\nmonths\n0\n1\n5.56\n3.49\n0\n3\n6\n9\n11\n▇▅▅▅▇\n\n\nresale_price\n0\n1\n536391.17\n157993.72\n200000\n428000\n515000\n610000\n1418000\n▅▇▂▁▁\n\n\nrem_lease_inmonths\n0\n1\n894.28\n180.23\n517\n741\n895\n1097\n1157\n▂▇▅▅▇\n\n\npsf\n0\n1\n532.40\n126.65\n309\n449\n498\n573\n1368\n▇▅▁▁▁"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visual-statistical-analysis",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visual-statistical-analysis",
    "title": "Take-home Exercise 03",
    "section": "3.1 Visual Statistical Analysis",
    "text": "3.1 Visual Statistical Analysis\nIn this section, I attempt to understand the difference in means of prices between different market segments and flat type. To do so, I use the Oneway ANOVA tests, which will show the comparison between means. After which, I attempt to understand the correlation of remaining lease with price, first by using significant test of correlation followed by a multi-linear regression where I include control variables.\n\na) Oneway ANOVA Test: ggbetweenstats() method\nPrice By Market Segment\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on price per square feet (psf) by market segment. The purpose is to test if indeed the price per square feet differs significantly across the 3 market segments. The null hypothesis is that all population means are equal (i.e. no variation in means across the 3 market segments ) while the alternative hypothesis is that at least 1 population mean is different.\n\n\nCode\nggbetweenstats(\n  data = resale_data_final,\n  x = market_segment, \n  y = psf,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\nAnalysis:\nFrom the visualization, we can see that the p-value is extremely small (<0.01). This means that we reject the null hypothesis and say that there is evidence that not all the means are the same and at least 1 mean is different across the 3 market segments, statistically significant at 1% level.\nPrice By Flat Type\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on price per square feet (psf) by flat type (3, 4 & 5 Room). The purpose is to test if indeed the psf differs significantly across the flat types. The null hypothesis is that all population means are equal (i.e. no variation in means across the 3 market segments) while the alternative hypothesis is that at least 1 population mean is different.\n\n\nCode\nggbetweenstats(\n  data = resale_data_final,\n  x = flat_type, \n  y = psf,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\n\nAnalysis:\nFrom the visualization, we can see that the p-value is extremely small (<0.01). This means that we reject the null hypothesis and say that there is evidence that not all the means are the same and at least 1 mean is different across the 3 flat types, statistically significant at 1% level.\nWe can also see that 4 ROOM flat type has highest mean psf, followed by 3 ROOM then 5 ROOM. It is interesting that 4 ROOM mean psf is actually higher than that of 3 ROOM since we usually expect that the bigger the flat, the lower the psf.\n\n\nb) Significant Test of Correlation: ggscatterstats()\nIn the code chunks below, ggscatterstats() is used to build a visual for Significant Test of Correlation between remaining lease in months and resale price per sf (psf).\n\n\nCode\nggscatterstats(\n  data = resale_data_final,\n  x = psf,\n  y = rem_lease_inmonths,\n  marginal = FALSE,\n  )\n\n\n\n\n\n\n\nCode\nggscatterstats(\n  data = resale_data_final,\n  x = rem_lease_inmonths,\n  y = psf,\n  marginal = FALSE,\n  )\n\n\n\n\n\nAnalysis:\nThere seems to be a statistically significant positive correlation between psf and remaining lease. The higher the remaining lease, the higher the price per square feet. To further support this, we want to include some control variables by having a multi-linear regression model including control variables such as flat type, flat model, market segment and month as shown below.\n\n\nc) Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of . The dependent/Y variable is psf while the independent/X variables are remaining lease, flat type, flat model, market segment and month.\n\n\nCode\nmodel <- lm(psf ~ rem_lease_inmonths + flat_type + flat_model + market_segment + month, data = resale_data_final)\n\nmodel\n\n\n\nCall:\nlm(formula = psf ~ rem_lease_inmonths + flat_type + flat_model + \n    market_segment + month, data = resale_data_final)\n\nCoefficients:\n                         (Intercept)                    rem_lease_inmonths  \n                            264.0395                                0.4587  \n                     flat_type4 ROOM                       flat_type5 ROOM  \n                            -30.6890                              -37.4823  \n             flat_modelAdjoined flat                        flat_modelDBSS  \n                             96.5466                              217.7092  \n                  flat_modelImproved         flat_modelImproved-Maisonette  \n                             40.8898                              162.1900  \n                   flat_modelModel A          flat_modelModel A-Maisonette  \n                             42.0292                              129.2770  \n                  flat_modelModel A2              flat_modelNew Generation  \n                             11.5564                               91.7886  \n         flat_modelPremium Apartment      flat_modelPremium Apartment Loft  \n                             40.3449                              239.3396  \n                flat_modelSimplified                    flat_modelStandard  \n                             74.9831                               84.1695  \n                   flat_modelTerrace                     flat_modelType S1  \n                            353.6917                              329.4812  \n                   flat_modelType S2  market_segmentOutside Central Region  \n                            335.9461                             -223.5458  \nmarket_segmentRest of Central Region                               month02  \n                            -56.2748                                5.6644  \n                             month03                               month04  \n                             10.3838                               17.0764  \n                             month05                               month06  \n                             21.1960                               27.2774  \n                             month07                               month08  \n                             28.6735                               30.4727  \n                             month09                               month10  \n                             36.1532                               41.7470  \n                             month11                               month12  \n                             37.6914                               39.9656  \n\n\n\n\nCode\nggcoefstats(model, \n            output = \"plot\")\n\n\n\n\n\n\n\nCode\ncheck_collinearity(model)\n\n\n# Check for Multicollinearity\n\nLow Correlation\n\n               Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n rem_lease_inmonths 2.01 [1.97, 2.05]         1.42      0.50     [0.49, 0.51]\n          flat_type 2.75 [2.69, 2.81]         1.66      0.36     [0.36, 0.37]\n              month 1.01 [1.00, 1.04]         1.01      0.99     [0.97, 1.00]\n         flat_model 6.18 [6.04, 6.33]         2.49      0.16     [0.16, 0.17]\n\nModerate Correlation\n\n           Term  VIF   VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n market_segment 1.62 [1.59, 1.65]         1.27      0.62     [0.61, 0.63]\n\n\n\n\nCode\ncheck_c <- check_collinearity(model)\nplot(check_c)\n\n\n\n\n\n\n\nCode\ncheck_n <- check_normality(model)\n\nplot(check_n)\n\n\n\n\n\n\n\nCode\ncheck_h <- check_heteroscedasticity(model)\n\nplot(check_h)\n\n\n\n\n\n\n\nCode\ncheck_model(model)\n\n\n\n\n\nAnalysis:\nAfter controlling for several variables (i.e. holding them constant), we see that remaining lease still has a statistically significantly positive correlation with price per sf, similar to the findings we found in sub-section b above. In this regression model, we see that for every 1 month increase in remaining lease, psf increases by $0.46.\nThere doesn’t seem to be multi-collinearity as we can see that the VIFs are <10. The distribution also seems somewhat normal although heteroscedasticity may not hold true."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualizing-uncertainty",
    "href": "Take-home_Ex/Take-home_Ex03/Take-home_Ex03.html#visualizing-uncertainty",
    "title": "Take-home Exercise 03",
    "section": "3.2 Visualizing Uncertainty",
    "text": "3.2 Visualizing Uncertainty\nIn this section, I attempt to visualize uncertainty using standard error of mean of price per sf by flat type. This will enable me to compare the uncertainty of the point estimate.\n\n\nCode\nmy_sum <- resale_data_final %>%\n  group_by(flat_type) %>%\n  summarise(\n    n=n(),\n    mean=mean(psf),\n    sd=sd(psf)\n    ) %>%\n  mutate(se=sd/sqrt(n-1))\n\n\n\n\nCode\nknitr::kable(head(my_sum), format = 'html')\n\n\n\n\n \n  \n    flat_type \n    n \n    mean \n    sd \n    se \n  \n \n\n  \n    3 ROOM \n    6346 \n    531.9578 \n    114.2673 \n    1.434518 \n  \n  \n    4 ROOM \n    11312 \n    540.8934 \n    136.1932 \n    1.280575 \n  \n  \n    5 ROOM \n    6716 \n    518.5222 \n    119.7026 \n    1.460766 \n  \n\n\n\n\n\n\n\nCode\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(flat_type, -mean),\n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=flat_type, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean \n          psf by flat type\")\n\n\n\n\n\n\n\nCode\nresale_data_final %>%\n  ggplot(aes(x = flat_type, \n             y = psf)) +\n  stat_pointinterval(\n    show.legend = FALSE) +   \n  labs(\n    title = \"Visualising confidence intervals of mean psf\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\n\n\nCode\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\n\n\nCode\nlibrary(ungeviz)\n\n\n\n\nCode\nggplot(data = resale_data_final, \n       (aes(x = factor(flat_type), y = psf))) +\n  geom_point(position = position_jitter(\n    height = 0.3, width = 0.05), \n    size = 0.4, color = \"#0072B2\", alpha = 1/2) +\n  geom_hpline(data = sampler(25, group = flat_type), height = 0.6, color = \"#D55E00\") +\n  theme_bw() + \n  # `.draw` is a generated column indicating the sample draw\n  transition_states(.draw, 1, 3)\n\n\n\n\n\nAnalysis:\nIt appears that the Standard Error seems to be very similar between the different flat types. The error bars are about the same height. This shows that the uncertainty of the means are very similar across the flat types and they can be compared.\nThe confidence intervals seems to overlap between the 3 flat types, which could mean that the mean psf may not be statistically significantly different from each other. However, from the one way ANOVA test in section 3.1, we saw that they are statistically significantly different."
  }
]